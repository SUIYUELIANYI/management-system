// goctl api go -api user.api -dir ../  --style=goZero
syntax = "v1"

info(
	title: "ç”¨æˆ·"
	desc: "ç”¨æˆ·"
	author: "qianren"
	email: "1911401642@qq.com"
)

type User {
	Id       int64  `json:"id"`
	OpenId   string `josn:"open_id"`
	Mobile   string `json:"mobile"`
	Username string `json:"username"`
	Realname string `json:"realname"`
	Sex      int64  `json:"sex"`
	Email    string `json:"email"`
	Status   int64  `json:"status"`
	Avatar   string `json:"avatar"`
	Address  string `json:"address"`
	Birthday string `json:"birthday"`
	Info     string `json:"info"`
}

type (
	RegisterReq {
		Mobile   string `json:"mobile"`
		Password string `json:"password"`
	}
	RegisterResp {
		AccessToken  string `json:"accessToken"`
		AccessExpire int64  `json:"accessExpire"`
		RefreshAfter int64  `json:"refreshAfter"`
	}
)

type (
	LoginReq {
		Mobile   string `json:"mobile"`
		Password string `json:"password"`
	}
	LoginResp {
		AccessToken  string `json:"accessToken"`
		AccessExpire int64  `json:"accessExpire"`
		RefreshAfter int64  `json:"refreshAfter"`
	}
)

type (
	WXMiniAuthReq {
		Code          string `json:"code"`
		IV            string `json:"iv"`
		EncryptedData string `json:"encryptedData"`
	}
	WXMiniAuthResp {
		AccessToken  string `json:"accessToken"`
		AccessExpire int64  `json:"accessExpire"`
		RefreshAfter int64  `json:"refreshAfter"`
	}
)

type (
	UserInfoReq {
	}
	UserInfoResp {
		UserInfo User `json:"userInfo"`
	}
)

// ==============> user <============
// no need login
@server(
	prefix: user/v1
	group: user
)
service user {
	@doc "register"
	@handler register
	post /user/register (RegisterReq) returns (RegisterResp)
	
	@doc "login"
	@handler login
	post /user/login (LoginReq) returns (LoginResp)
}

// need login
@server(
	prefix: user/v1
	group: user
	jwt: JwtAuth
)
service user {
	@doc "get user info"
	@handler userInfo
	post /user/info (UserInfoReq) returns (UserInfoResp)
	
	@doc "wechat mini auth"
	@handler WXMiniAuth
	post /user/wxMiniAuth (WXMiniAuthReq) returns (WXMiniAuthResp)
}